
#include "itkImageFileReader.h"
#include "itkBinaryMask3DMeshSource.h"
#include "itkImage.h"
#include <itkTIFFImageIO.h>
int main( int, char* [] )
{
    const unsigned char Dimension = 3;
  typedef unsigned int  PixelType;
  typedef itk::Image< PixelType, Dimension > ImageType;
  
typedef itk::ImageFileReader< ImageType >    ReaderType;
  ReaderType::Pointer reader = ReaderType::New();
 reader->SetImageIO(itk::TIFFImageIO::New());  

const char* filename= "/home/highschoolintern/Desktop/SurfaceExtraction2/mri.tif";
reader->SetFileName(filename);

try
    {
    reader->Update();
    }
  catch( itk::ExceptionObject & exp )
    {
    std::cerr << "Exception thrown while reading the input file " << std::endl;
    std::cout << filename << std::endl;
    std::cerr << exp << std::endl;
    return EXIT_FAILURE;
    }

std::cout<< "It worked!" << std::endl; 
typedef itk::Mesh<double> MeshType;
typedef itk::BinaryMask3DMeshSource< ImageType, MeshType > MeshSourceType;
MeshSourceType::Pointer meshSource = MeshSourceType::New();
/*const PixelType objectValue = static_cast<PixelType>( atof( filename) );
meshSource->SetInput( reader->GetOutput() );

try
  {
  meshSource->Update();
  }
catch( itk::ExceptionObject & exp )
  {
  std::cerr << "Exception thrown during Update() " << std::endl;
  std::cerr << exp << std::endl;
  return EXIT_FAILURE;
  }

std::cout << "Nodes = " << meshSource->GetNumberOfNodes() << std::endl;
std::cout << "Cells = " << meshSource->GetNumberOfCells() << std::endl; */

return 0;
}
